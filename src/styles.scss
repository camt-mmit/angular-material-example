// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$light-primary: mat.define-palette(mat.$deep-purple-palette);
$light-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$light-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: $light-primary,
      accent: $light-accent,
      warn: $light-warn,
    ),
  )
);

$dark-primary: mat.define-palette(mat.$purple-palette, A200, A100, A400);
$dark-accent: mat.define-palette(mat.$green-palette, A200, A100, A400);
$dark-warn: mat.define-palette(mat.$red-palette);

$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
      warn: $dark-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($light-theme);

/* You can add global styles to this file, and also import other style files */

:root {
  font-family: Roboto, 'Helvetica Neue', sans-serif;

  --app-primary-color: #{mat.get-color-from-palette($light-primary)};
  --app-accent-color: #{mat.get-color-from-palette($light-accent)};
  --app-warn-color: #{mat.get-color-from-palette($light-warn)};

  --app-primary-lighter-color: #{mat.get-color-from-palette(
      $light-primary,
      'lighter'
    )};
  --app-accent-lighter-color: #{mat.get-color-from-palette(
      $light-accent,
      'lighter'
    )};
  --app-warn-lighter-color: #{mat.get-color-from-palette($light-warn, 'lighter')};

  --app-primary-darker-color: #{mat.get-color-from-palette(
      $light-primary,
      'darker'
    )};
  --app-accent-darker-color: #{mat.get-color-from-palette(
      $light-accent,
      'darker'
    )};
  --app-warn-darker-color: #{mat.get-color-from-palette($light-warn, 'darker')};

  --app-row-gap: 1rem;
  --app-column-gap: 8px;

  --app-center-max-width: 600px;
}

:root[data-theme='dark'] {
  @include mat.all-component-colors($dark-theme);

  --app-primary-color: #{mat.get-color-from-palette($dark-primary)};
  --app-accent-color: #{mat.get-color-from-palette($dark-accent)};
  --app-warn-color: #{mat.get-color-from-palette($dark-warn)};

  --app-primary-lighter-color: #{mat.get-color-from-palette(
      $dark-primary,
      'lighter'
    )};
  --app-accent-lighter-color: #{mat.get-color-from-palette(
      $dark-accent,
      'lighter'
    )};
  --app-warn-lighter-color: #{mat.get-color-from-palette($dark-warn, 'lighter')};

  --app-primary-darker-color: #{mat.get-color-from-palette(
      $dark-primary,
      'darker'
    )};
  --app-accent-darker-color: #{mat.get-color-from-palette(
      $dark-accent,
      'darker'
    )};
  --app-warn-darker-color: #{mat.get-color-from-palette($dark-warn, 'darker')};
}

html,
body {
  height: 100vh;
}
body {
  margin: 0;
}

.mat-snack-bar-container.snack-bar-warn {
  color: var(--app-warn-color) !important;
}

.cl-number {
  font-family: monospace;
  text-align: right;
}

[formgroup].ng-touched.ng-invalid.cl-invalid,
[formgroupname].ng-touched.ng-invalid.cl-invalid {
  box-shadow: inset 0px 0px 0px 2px var(--app-warn-color);
  border-radius: 4px;
}

.cmp-form-field.mat-form-field {
  min-height: 3em;

  & > .mat-form-field-subscript-wrapper {
    display: none;
  }

  & > *.ng-touched.ng-invalid + .mat-form-field-subscript-wrapper {
    display: block;
  }
}

.cmp-main-content {
  display: block;
  box-sizing: border-box;
  max-width: var(--app-center-max-width);

  margin-top: 16px;
  margin-left: auto;
  margin-right: auto;
}

.cmp-fields-row {
  display: grid;

  grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));

  column-gap: var(--app-column-gap);
  row-gap: var(--app-row-gap);

  align-items: center;
}

.cmp-actions-panel {
  margin-top: 16px;
  margin-bottom: 16px;

  padding: 8px;
}
